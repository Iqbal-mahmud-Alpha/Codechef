#include <bits/stdc++.h>
using namespace std;
#define faster      ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ff first
#define ss second
#define pb push_back

#define fr0(i, n)      for(int i=0; i<n; i++)
#define fr1(i, n)      for(int i=1; i<=n; i++

#define mem(a,b)  memset(a,b,sizeof(a))
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) (a * (b / gcd(a, b)))
#define all(a) a.begin(), a.end()
#define setbit(n) __builtin_popcount(n);
#define totalbit(n) log2(n)+1
#define precision(x)      cout<<fixed<<setprecision(x)
#define INF 1000000000
#define mod 1000000007
#define num 3200

/**------- Char Chk----------*/
bool isLower(char ch)
{
    if(ch>='a' && ch<='z') return true;
    return false;
}
bool isUppper(char ch)
{
    if(ch>='A' && ch<='Z') return true;
    return false;
}
bool isDiget(char ch)
{
    if(ch>='0' && ch<='9') return true;
    return false;
}

/**----data type----*/
typedef long long int ll;
typedef unsigned long long int llu;

int maxSum(int arr[], int n, int k)
{
    int res = 0;
    for (int i=0; i<k; i++)
        res += arr[i];
    int curr_sum = res;
    for (int i=k; i<n; i++)
    {
        curr_sum += arr[i] - arr[i-k];
        res = min(res, curr_sum);
    }

    return res;
}
int main()
{
    int t,n,k;
    cin>>t;
    while(t--)
    {
        cin>>n>>k;
        int a[n];
        int one=0;
        for(int i=0; i<n; i++)
        {
            cin>>a[i];
            if(a[i]==1)one++;
        }
        int aa=maxSum(a,n,k);
        ll sum=0;
        while(one--)
        {
            if(aa<=0)
            {
                sum+=1;
            }
            else
            {
                sum+=aa;
            }
            aa--;
        }
        cout<<sum<<endl;
    }
}
